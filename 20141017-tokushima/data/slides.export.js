{ "_id" : { "$oid" : "543bf23cb26f6b0f7329c21c" }, "page" : 1, "title" : "LAMP（ランプ）構成", "sections" : [ { "list" : [ "Linux", "Apache", "MySQL", "Perl/PHP/Python" ] }, { "block" : "2000年代の標準的なWebサイトの構成。まだ言語やミドルウェアの選択が重要な時代。様々なフレームワークが登場し淘汰された。" }, { "block" : "次第にMVCアーキテクチャがWebの標準となっていく。" } ] }
{ "_id" : { "$oid" : "543bede8b26f6b0f7329c217" }, "page" : 2, "title" : "フルスタック・フレームワーク", "sections" : [ { "list" : [ "Ruby on Rails", "MySQL" ] }, { "block" : "2010年前後から台頭した。MVCアーキテクチャの一つの完成系。" }, { "block" : "OS/ミドルウェア/DBの違いはフレームワークの機能として取り込まれ、アプリケーション開発において意識する必要が（ほとんど）無い。" }, { "block" : "最大の特徴は" }, { "strong" : "設定より規約" }, { "block" : "アプリケー ションの作りが均一化された事でライブラリー化が促進され、ますます発展した。" }, { "strong" : "しかし明確な弱点がある" }, { "list" : [ "Rubyの言語としての速度不足", "MySQLを想定したO/R Mapper(AR)" ] }, { "strong" : "Python（pypy）で実装したRubyを使うと数倍速くなる" }, { "block" : "などRubyの速度不足は深刻でPythonやnodeJSなどの台頭を許す要因になっている。" }, { "block" : "またフレームワークとしてMySQLとの結合度が高く、MySQLの限界に引きずられる。"}, { list: ["負荷分散", "大規模テーブルのALTER"] } ] }
{ "_id" : { "$oid" : "543bf6b7b26f6b0f7329c21d" }, "page" : 3, "title" : "MEAN（ミーン）/ MEN（メン）スタック", "sections" : [ { "list" : [ "MongoDB", "Express", "AngularJS", "NodeJS" ] }, { "block" : "最近流行始めた有望な構成。４つを組み合わせる事でRailsと同じ範囲をカバーできる。" }, { "block" : "完成度はまだ低いものの" }, { "strong" : "Railsの弱点" }, { "block" : "を解決している。" }, { "block" : "スキーマレスなMongoDBはMySQLよりも格段に変更に強く、負荷分散も容易。" }, { "block" : "性能に関しては申し分無く、rubyと比較して10倍以上の差になる事もある。" }, { "block" : "反面、まだ完成度が低く、圧倒的性能差があるにも関わらず開発コストを考慮した時Railsの方が良い場合もある。" } ] }
